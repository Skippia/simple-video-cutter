"use strict";var j=Object.defineProperty;var i=(t,e)=>j(t,"name",{value:e,configurable:!0});const b=require("/home/skippy/CURRENT_PROJECTS/video-cutter/node_modules/.pnpm/fluent-ffmpeg@2.1.3/node_modules/fluent-ffmpeg/index.js"),h=require("process"),O=require("path"),S=require("child_process"),$=require("node:process"),f=require("fs"),c=require("node:path"),w=require("/home/skippy/CURRENT_PROJECTS/video-cutter/node_modules/.pnpm/ffmpeg-static@5.2.0/node_modules/ffmpeg-static/index.js"),q=["-crf 28","-preset ultrafast","-b:a 128k","-movflags +faststart","-vf scale=-2:540,format=yuv420p"],D=["-crf 28","-preset ultrafast","-b:a 128k","-movflags +faststart","-vf scale=-2:540,format=yuv420p"],N=["-crf 18","-preset ultrafast","-b:a 128k","-movflags +faststart","-vf scale=-2:540,format=yuv420p"],d={"540p":q,"720p":D,lossless:N},v=i(()=>{console.error("Usage: script --disk <disk> --filename <filename> --start <start_time> --end <end_time> --preset <preset_name>"),process.exit(1)},"usage"),k=i(()=>{const t=new Date,e=i(r=>String(r).padStart(2,"0"),"pad");return`${t.getFullYear()}${e(t.getMonth()+1)}${e(t.getDate())}_${e(t.getHours())}${e(t.getMinutes())}${e(t.getSeconds())}`},"getFormattedDate"),I=i((t,e)=>O.join(e,`${t}-${k()}_extracted.mp4`),"generateOutputFilename"),E=i(t=>{const e=t.split(":").map(Number);if(e.length===3)return e[0]*3600+e[1]*60+e[2];if(e.length===2)return e[0]*60+e[1];if(e.length===1)return e[0];throw new Error("Invalid time format")},"convertTimeIntoSeconds"),A=i(t=>{let e,s,r,n,a=d["540p"];for(let o=0;o<t.length;o++){const l=t[o];if(l==="--disk")e=t[o+1];else if(l==="--filename")s=t[o+1];else if(l==="--start")r=t[o+1];else if(l==="--end")n=t[o+1];else if(l==="--preset"){const p=t[o+1];Object.keys(d).includes(p)?a=d[p]:console.warn(`Preset "${p}" does not exist.
Available preset names are: ${Object.keys(d).join(", ")}.
Selected default preset: ${y(a)}.`)}else v();o++}return(!s||!r||!n)&&v(),{preset:a,disk:e,filename:s,startTime:r,endTime:n}},"parseUserInput"),y=i(t=>Object.entries(d).find(([e,s])=>s===t)?.[0],"getPresetName"),u=i(t=>t.includes("/")||t.includes("\\"),"checkFilenameIsPath"),C=i((t,e)=>{try{if($.platform==="win32"){const n=t.toUpperCase()+":\\",a=`dir "${n}${e}" /s /b`;let o="";if(u(e)){if(!f.existsSync(c.join(n,e)))throw new Error(`File on path ${e} does not exist`);o=c.join(n,e)}else o=S.execSync(a,{encoding:"utf8"}).trim();if(!o)throw new Error("Not found");if(o.includes(`\r
`))throw new Error("Found collision names. Use absolute path to filename location.");return o}const s=`find /${t} -name "${e}" -exec dirname {} \\; -quit`;let r="";if(u(e)){if(!f.existsSync(c.join(t,e)))throw new Error(`File on path ${e} does not exist`);r=c.join(t,e)}else{const n=S.execSync(s,{encoding:"utf8"}).trim();if(console.log(c.join(t,e)),f.existsSync(c.join(t,e))&&n)throw new Error("Found collision names. Use absolute path to filename location.");r=c.join(n,e)}if(!r)throw new Error("Not found");return r}catch(s){console.error(s.message),$.exit(1)}},"findFileDirectory");w&&b.setFfmpegPath(w);const{disk:U,filename:m,startTime:T,endTime:R,preset:x}=A(h.argv.slice(2)),F=process.platform==="win32"?"X:\\\\OBS":"/mnt/x/OBS";F||console.error("Environment variable STORAGE_WINDOWS_PATH or STORAGE_LINUX_PATH is not set.");const P=C(U,m),g=I(u(m)?c.basename(m):m,F);console.dir({pathToFile:P,outputFile:g});const H=E(T),M=E(R),_=M-H;_<=0&&(console.error("End time must be greater than start time."),h.exit(1));b(f.createReadStream(P)).seekInput(T).duration(_).videoCodec("libx265").audioCodec("aac").outputOptions(x).format("mp4").on("start",t=>{console.time("Time of compressing"),console.log("Selected preset:",y(x)),console.log("Start compressing...")}).on("error",t=>{console.error("Error during processing: "+t.message),h.exit(1)}).on("end",()=>{console.log(`Output file created: ${g}`),console.timeEnd("Time of compressing")}).save(g);
